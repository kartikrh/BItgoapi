/**
 * Created by arik on 6/13/17.
 */

const prova = require('../');

const network = prova.networks.rmgTest;
const fundingKey1 = prova.ECPair.fromPrivateKeyBuffer(Buffer.from('3f9222ab4d30b1795941d9815e5833a4da70cb04bff59a5fd2ddc4641e58607e', 'hex'), network);
const fundingKey2 = prova.ECPair.fromPrivateKeyBuffer(Buffer.from('0a40defde0e49e1f78edb9cea5c499f704fabc140d6fd1a4df8405365e2e4f0f', 'hex'), network);

const aspKey1 = prova.ECPair.fromPrivateKeyBuffer(Buffer.from('eaf02ca348c524e6392655ba4d29603cd1a7347d9d65cfe93ce1ebffdca22694', 'hex'), network);
const aspKey2 = prova.ECPair.fromPrivateKeyBuffer(Buffer.from('2b8c52b77b327c755b9b375500d3f4b2da9b0a1ff65f6891d311fe94295bc26a', 'hex'), network);

// TODO: replace with fixed value if necessary
const myKey = prova.ECPair.makeRandom(network);
const myAddress = new prova.Address(myKey, [1, 2], network);

// admin threads need to be continued
// this is the issuance thread
// TODO: set to correct transaction
const lastAdminFundingTransactionHex = '01000000010000000000000000000000000000000000000000000000000000000000000000ffffffff200000000000000000003580857be175c7d577b85db2e006d5b8914e64abb7871cffffffff0300000000000000000200bb00000000000000000251bb00000000000000000252bb00000000';
const lastAdminFundingTransaction = prova.Transaction.fromHex(lastAdminFundingTransactionHex);
// TODO: set to correct output index
const lastAdminFundingTransactionAdminThreadOutputIndex = 2; // or whatever the index is

const fundingTxBuilder = new prova.TransactionBuilder(network);
fundingTxBuilder.addInput(lastAdminFundingTransaction.getId(), lastAdminFundingTransactionAdminThreadOutputIndex, 0xffffffff);
fundingTxBuilder.addAdminThreadOutput(prova.ADMIN.THREADS.ISSUANCE);
fundingTxBuilder.addOutput(myAddress, 400000000); // issue 400 RMG to my address
fundingTxBuilder.setLockTime(8162);
// sign the transaction input with both funding keys
fundingTxBuilder.signWithTx(0, fundingKey1, lastAdminFundingTransaction);
fundingTxBuilder.signWithTx(0, fundingKey2, lastAdminFundingTransaction);
// construct the transactions
const fundingTx = fundingTxBuilder.build();
const fundingTxHex = fundingTx.toHex();
// this output can then be broadcast
console.log(fundingTxHex);

// spend the money to a different address
const spendTxBuilder = new prova.TransactionBuilder(network);
spendTxBuilder.addInput(fundingTx.getId(), 1, 0xffffffff); // output index 1 because index 0 is the admin thread continuation
// TODO: specify desired recipient and output amount
spendTxBuilder.addOutput('someDestinationAddress', 10);
spendTxBuilder.signWithTx(0, myKey, fundingTx);
spendTxBuilder.signWithTx(0, aspKey1, fundingTx);
const spendTx = spendTxBuilder.build();
const spendTxHex = spendTx.toHex();
// this output can be broadcast afterwards
console.log(spendTxHex);
